do(data.frame(rbind(Hmisc::smean.cl.boot(.$left_right0to10))))
# only select surveys since 2002
dat_ire_eurobarometer_sum_plot <- dat_ire_eurobarometer_sum %>%
mutate(year_eurobar = paste0(year, " (", eurobar_number, ")")) %>%
filter(year >= 2002)
nrow(dat_ire_eurobarometer_sum_plot)
# 85 Eurobarometer surveys for Ireland, 2002-2020
ggplot(dat_ire_eurobarometer_sum_plot,
aes(x = eurobar_number, y = Mean,
ymin = Lower, ymax = Upper)) +
geom_linerange(alpha = 0.8,
position = position_dodge(width = 0.5)) +
geom_point(size = 2,
position= position_dodge(width = 0.5)) +
scale_colour_manual(values = rep("black", 86)) +
facet_grid(.~year, scales = "free_x", space = "free") +
labs(x = "Eurobarometer Survey ID", y = "Left-Right Self-Placement") +
scale_y_continuous(limits = c(4, 6)) +
theme(legend.position = "none",
strip.text = element_text(angle = 90, vjust = 0.5, size = 10),
axis.text.x = element_text(angle = 90, vjust = 0.5, size = 7),
panel.border = element_rect(fill=NA,color="grey70", size=0.5,
linetype="solid"))
ggsave("fig_a07.pdf",
width = 19, height = 6)
# create histogram of left-right self-placements in each election study
left_right_self_distributions <- dat_electionstudies %>%
filter(!is.na(left_right_self)) %>%
group_by(year, left_right_self) %>% # group by position and year
count() %>%
group_by(year) %>%
mutate(prop = n / sum(n))
# get averages for each year
left_right_self_means <- dat_electionstudies %>%
filter(!is.na(left_right_self)) %>%
group_by(year) %>%
summarise(lr_mean = mean(left_right_self))
left_right_self_means
## Figure A08 ----
ggplot(left_right_self_distributions,
aes(x = left_right_self, y = prop)) +
geom_bar(stat = "identity",
fill = "grey80") +
facet_wrap(~year, nrow = 1) +
scale_x_continuous(breaks = c(seq(0, 10, 2))) +
scale_y_continuous(labels = scales::percent_format(accuracy =1)) +
geom_vline(data = left_right_self_means,
aes(xintercept = lr_mean),
linetype = "dashed",
colour = "red") +
labs(x = "Left-Right Self-Placement",
y = NULL)
ggsave("fig_a08.pdf",
width = 9, height = 4)
# load ESRI survey and create histogram comparable to Figure A08
dat_esri <- read.csv("data_esri.csv")
table(dat_esri$lab)
# They asked to place themselves on a scale from 1 ‘Social Liberal’ to 11
# ‘Social Conservative’ and from 1 ‘Economic Left’ to 11 ‘
# Economic Right’, respectively.
dat_esri_long <- dat_esri %>%
select(pol_econ, lab) %>%
gather(var, value, -c(lab)) %>%
mutate(value = value - 1) %>%
mutate(lab = car::recode(lab, "0='Online';1='Lab'")) %>%
mutate(question = car::recode(var, "'pol_soc'='Left-right (social)';
'pol_econ'='Left-right (economic)'"))
ire_esri_lr_sum <- dat_esri_long %>%
filter(!is.na(value)) %>%
group_by(lab, question, value) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n))
ire_esri_lr_means <- dat_esri_long %>%
filter(!is.na(value)) %>%
group_by(lab, question) %>%
summarise(lr_mean = mean(value))
## Figure A09 ----
ggplot(ire_esri_lr_sum, aes(x = as.numeric(value),
y = freq, fill = question)) +
geom_bar(stat = "identity", fill = "grey70") +
facet_wrap(~lab) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(breaks = c(seq(0, 10, 2))) +
geom_vline(data = ire_esri_lr_means, aes(xintercept = lr_mean),
colour = "red", linetype = "dashed") +
labs(x = "Left-Right Self-Placement", y = NULL) +
theme(legend.position = "none")
ggsave("fig_a09.pdf", width = 9, height = 4)
# left-right self-placements by first-preference vote choice in 2020
# after excluding respondents who placed themselves at 0
left_right_self_means_no0 <- dat_all_elections_subset %>%
filter(!is.na(left_right_self)) %>%
filter(left_right_self != 0) %>% # exclude respondents who placed themselves at 0
group_by(year) %>%
summarise(lr_mean = mean(left_right_self))
left_right_self_means_no0
left_right_self_partymeans_no0 <- dat_all_elections_subset %>%
filter(!is.na(party_vote_recoded_precise)) %>%
filter(left_right_self != 0) %>% # remove respondents who placed themselves at 0
srvyr::as_survey_design() %>%
group_by(year, party_vote_recoded_precise) %>%
summarise(lr_mean = srvyr::survey_mean(left_right_self,
na.rm = TRUE)) %>%
mutate(lr_ci_95_lower = lr_mean - 1.96 * lr_mean_se) %>%
mutate(lr_ci_95_upper = lr_mean + 1.96 * lr_mean_se) %>%
mutate(lr_ci_90_lower = lr_mean - 1.645 * lr_mean_se) %>%
mutate(lr_ci_90_upper = lr_mean + 1.645 * lr_mean_se)
# relevel factor
left_right_self_partymeans_no0$party_vote_recoded_precise <- factor(
left_right_self_partymeans_no0$party_vote_recoded_precise,
levels = c("Fine Gael",
"Fianna Fáil",
"Labour Party",
"Green Party",
"Sinn Féin",
"Social Democrats",
"Solidarity PBP"))
colours_party <- c("#009FF3",
"#66BB66",
"#CC0000",
"#99CC33",
"#326760",
"#752F8B",
"#660000")
## Figure A10 ----
ggplot(left_right_self_partymeans_no0,
aes(x = forcats::fct_rev(as.factor(year)),
y = lr_mean,
colour = party_vote_recoded_precise)) +
geom_point(size = 2) +
geom_linerange(aes(ymin = lr_ci_90_lower,
ymax = lr_ci_90_upper),
size = 1.05) +
geom_linerange(aes(ymin = lr_ci_95_lower,
ymax = lr_ci_95_upper)) +
coord_flip() +
scale_y_continuous(limits = c(0, 10),
breaks = c(seq(0, 10, 1))) +
scale_colour_manual(values = colours_party) +
facet_grid(party_vote_recoded_precise ~.) +
theme(legend.position = "none",
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 12),
strip.text.y = element_text(angle = 0, hjust = 0, size = 12))  +
labs(x = "Election",
y = "Average Left-Right Self-Placement")
ggsave("fig_a10.pdf",
width = 9, height = 7.5)
# get average left-right self-placements conditional on income category
left_right_self_incomemeans <- dat_electionstudies %>%
filter(!is.na(left_right_self)) %>%
filter(!is.na(income_harmonised)) %>%
srvyr::as_survey_design() %>%
group_by(year, income_harmonised) %>%
summarise(lr_mean = srvyr::survey_mean(left_right_self,
na.rm = TRUE)) %>%
mutate(lr_ci_95_lower = lr_mean - 1.96 * lr_mean_se) %>%
mutate(lr_ci_95_upper = lr_mean + 1.96 * lr_mean_se) %>%
mutate(lr_ci_90_lower = lr_mean - 1.645 * lr_mean_se) %>%
mutate(lr_ci_90_upper = lr_mean + 1.645 * lr_mean_se)
# nicer labels for plot
left_right_self_incomemeans <- left_right_self_incomemeans %>%
mutate(income_plot = paste0("Income Category: ", income_harmonised)) %>%
mutate(income_plot = ifelse(str_detect(income_plot, "1"),
"Income Category: 1 (Lowest)",
ifelse(str_detect(income_plot, "5"), "Income Category: 5 (Highest)",
income_plot)))
## Figure A11 ----
ggplot(left_right_self_incomemeans, aes(x = forcats::fct_rev(as.factor(year)),
y = lr_mean,
colour = income_plot)) +
geom_point(size = 2) +
geom_linerange(aes(ymin = lr_ci_90_lower,
ymax = lr_ci_90_upper),
size = 1.05) +
geom_linerange(aes(ymin = lr_ci_95_lower,
ymax = lr_ci_95_upper)) +
coord_flip() +
scale_y_continuous(limits = c(3, 8)) +
scale_colour_manual(values = c("grey60", "grey50",
"grey40", "grey30",
"black")) +
facet_grid(income_plot ~.) +
theme(legend.position = "none",
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 12),
strip.text.y = element_text(angle = 0, hjust = 0, size = 12))  +
labs(x = "Election",
y = "Average Left-Right Self-Placement")
ggsave("fig_a11.pdf",
width = 9, height = 4.5)
# repeat Figure 4 from paper but exclude pensioners
## rerun models from Table 1, but remove retired respondents
lm_lr_no_retired_02 <- update(lm_lr_02,
data = filter(dat_reg,
year == "2002" &
retired == FALSE))
lm_lr_no_retired_07 <- update(lm_lr_02,
data = filter(dat_reg,
year == "2007" &
retired == FALSE))
lm_lr_no_retired_11 <- update(lm_lr_02,
data = filter(dat_reg,
year == "2011" &
retired == FALSE))
lm_lr_no_retired_16 <- update(lm_lr_02,
data = filter(dat_reg,
year == "2016" &
retired == FALSE))
lm_lr_no_retired_20 <- update(lm_lr_02,
data = filter(dat_reg,
year == "2020" &
retired == FALSE))
# get expected values
pred_income_02_no_retired <- ggpredict(lm_lr_no_retired_02, terms = c("income_harmonised"),
condition = c(
age_cat = "35-44",
gender = "Male",
urban = "0",
university_degree = "0")) %>% mutate(model = "2002")
pred_income_02_no_retired
pred_income_07_no_retired <- ggpredict(lm_lr_no_retired_07, terms = c("income_harmonised"),
condition = c(
age_cat = "35-44",
gender = "Male",
urban = "0",
university_degree = "0")) %>% mutate(model = "2007")
pred_income_11_no_retired <- ggpredict(lm_lr_no_retired_11, terms = c("income_harmonised"),
condition = c(
age_cat = "35-44",
gender = "Male",
urban = "0",
university_degree = "0")) %>% mutate(model = "2011")
pred_income_16_no_retired <- ggpredict(lm_lr_no_retired_16, terms = c("income_harmonised"),
condition = c(
age_cat = "35-44",
gender = "Male",
urban = "0",
university_degree = "0")) %>% mutate(model = "2016")
pred_income_20_no_retired <- ggpredict(lm_lr_no_retired_20, terms = c("income_harmonised"),
condition = c(
age_cat = "35-44",
gender = "Male",
urban = "0",
university_degree = "0")) %>% mutate(model = "2020")
pred_income_no_retired <- bind_rows(pred_income_02_no_retired,
pred_income_07_no_retired,
pred_income_11_no_retired,
pred_income_16_no_retired,
pred_income_20_no_retired)
pred_income_no_retired <- pred_income_no_retired %>%
mutate(income_cat = dplyr::recode(
x, "1" = "1: Lowest", "5" = "5: Highest"
))
## Figure A12 ----
ggplot(pred_income_no_retired, aes(x = predicted, y = x)) +
geom_point(size = 3) +
geom_errorbarh(aes(xmin = predicted - 1.96 * std.error,
xmax = predicted + 1.96 * std.error),
size = 0.5, height = 0) +
geom_errorbarh(aes(xmin = predicted - 1.645 * std.error,
xmax = predicted + 1.645 * std.error),
size = 1.3, height = 0) +
coord_flip() +
facet_wrap(~model, nrow = 1) +
scale_x_continuous(limits = c(3, 8)) +
labs(x = "Expected Left-Right Self-Placement",
y = "Income Category (from Lowest to Highest)")
ggsave("fig_a12.pdf",
width = 9, height = 5)
# run linear regressions with taxes/spending and income differences
# as dependent variables
lm_taxesspend_20 <- lm(taxes_spending ~ gender + urban +
university_degree  +
age_cat +
income_harmonised,
weight = weights,
data = filter(dat_reg,
year == "2020"))
lm_incomediff_20 <- lm(income_differences ~  +
age_cat +
income_harmonised +
gender + urban +
university_degree,
weight = weights,
data = filter(dat_reg,
year == "2020"))
## Table A1 ----
screenreg(list(
lm_lr_20,
lm_incomediff_20,
lm_taxesspend_20
))
wordreg(list(lm_lr_20,
lm_incomediff_20,
lm_taxesspend_20),
single.row = FALSE,
custom.coef.names = c(
"(Intercept)",
"Income category: 2 (ref.: 1)",
"Income category: 3",
"Income category: 4",
"Income category: 5",
"Age: 25-34 (ref.: 18-24)",
"Age: 35-44",
"Age: 45-54",
"Age: 55-64",
"Age: 65+",
"Female",
"Urban constituency",
"University degree"),
size = "footnotesize",
custom.model.names = c("M1: Left-right",
"M2: Income Diff.",
"M3: Taxes and Spending"),
file = "tab_a01.doc")
## save models for Figure 4 for a regression table
factors_party <- c("Fianna Fáil", "Fine Gael",
"Sinn Féin",
"Greens and Left bloc",
"Other and Independents")
dat_reg_multinom$party_vote <- factor(
dat_reg_multinom$party_vote,
levels = factors_party
)
lm_multinom_02 <- multinom(party_vote ~ left_right_self +
income_harmonised + age_cat  +
gender +
urban + university_degree,
weight = weights,
data = filter(dat_reg_multinom,
year == "2002"))
lm_multinom_07 <- update(lm_multinom_02,
data = filter(dat_reg_multinom,
year == "2007"))
lm_multinom_11 <- update(lm_multinom_02,
data = filter(dat_reg_multinom,
year == "2011"))
lm_multinom_16 <- update(lm_multinom_02,
data = filter(dat_reg_multinom,
year == "2016"))
lm_multinom_20 <- update(lm_multinom_02,
data = filter(dat_reg_multinom,
year == "2020"))
## Table A2 ----
screenreg(list(lm_multinom_02,
lm_multinom_07,
lm_multinom_11,
lm_multinom_16,
lm_multinom_20))
coefs <- c("Intercept",
"Left-right self-placement",
"Income category: 2 (ref.: 1)",
"Income category: 3",
"Income category: 4",
"Income category: 5",
"Age: 25-34 (ref.: 18-24)",
"Age: 35-44",
"Age: 45-54",
"Age: 55-64",
"Age: 65+",
"Female",
"Urban constituency",
"University degree")
coefs_multinom <- c(
paste0("Fine Gael: ", coefs),
paste0("Sinn Féin: ", coefs),
paste0("Greens and Left bloc: ", coefs),
paste0("Other/Ind: ", coefs))
wordreg(list(lm_multinom_02,
lm_multinom_07,
lm_multinom_11,
lm_multinom_16,
lm_multinom_20),
single.row = FALSE,
ci.force = FALSE,
custom.coef.names = coefs_multinom,
size = "footnotesize",
custom.model.names = c("2002", "2007", "2011", "2016", "2020"),
file = "tab_a02.doc")
## Table A3 ----
# models are run above (for Figures 5 and 6)
screenreg(list(
multinom_20_incomediff,
multinom_20_taxespend
))
coefs_20 <- c("Intercept",
"Income differences",
"Income category: 2 (ref.: 1)",
"Income category: 3",
"Income category: 4",
"Income category: 5",
"Age: 25-34 (ref.: 18-24)",
"Age: 35-44",
"Age: 45-54",
"Age: 55-64",
"Age: 65+",
"Female",
"Urban constituency",
"University degree")
coefs_multinom_20 <- c(
paste0("Fine Gael: ", coefs_20),
paste0("Sinn Féin: ", coefs_20),
paste0("Greens and Left bloc: ", coefs_20),
paste0("Other and Independent: ", coefs_20))
coefs_multinom_20 <- c(coefs_multinom_20,
"Fine Gael: Taxes and Spending",
"Sinn Féin: Taxes and Spending",
"Greens and Left bloc: Taxes and Spending",
"Other and Independents: Taxes and Spending"
)
wordreg(list(multinom_20_incomediff,
multinom_20_taxespend),
single.row = FALSE,
ci.force = FALSE,
custom.model.names = c("M1: Income Diff.",
"M2: Taxes and Spending"),
custom.coef.names = coefs_multinom_20,
size = "footnotesize",
file = "tab_a03.doc")
# random forest models
## select relevant variables for random forest models
dat_random_forest <- dat_electionstudies %>%
ungroup() %>%
select(year, age_cat,
party_vote,
income_harmonised, urban, gender,
university_degree,
left_right_self)
table(dat_random_forest$year)
# run random forest model
year <- unique(dat_random_forest$year)
# store coefficients
dat_importance_merged_lr <- data.frame()
for (i in year) {
dat_year <- filter(dat_random_forest, year == i)
random_forest_year <- randomForest::randomForest(
left_right_self ~
age_cat + income_harmonised +
university_degree +
urban + gender,
data = dat_year,
na.action = na.omit,
keep.forest = FALSE,
importance = TRUE,
ntree = 1000)
## tidy output of random forest model
dat_importance <- randomForest::importance(random_forest_year,
type = 1)
vnames_1 <- rownames(dat_importance)
i_1 <- as.vector(dat_importance)
names(i_1) <- vnames_1
dat_importance <- data.frame(importance = i_1[order(i_1, decreasing = TRUE)])
dat_importance$variable <- rownames(dat_importance)
dat_importance$year <- i
dat_importance_merged_lr <- bind_rows(dat_importance,
dat_importance_merged_lr)
dat_importance_merged_lr <- dat_importance_merged_lr %>%
mutate(variable = dplyr::recode(variable,
"university_degree" = "University Degree",
"income_harmonised" = "Income",
"age_cat" = "Age",
"gender" = "Gender",
"urban" = "Urban/Rural"
))
}
# Figure A13 ----
ggplot(data = dat_importance_merged_lr,
aes(x = factor(nrow(dat_importance_merged_lr):1),
y = importance)) +
geom_bar(stat = "identity", width = 0.1) +
geom_point(size = 3) +
facet_wrap(~ year, scales = "free_y", nrow = 5) +
coord_flip() +
scale_x_discrete(breaks = nrow(dat_importance_merged_lr):1,
labels = dat_importance_merged_lr$variable) +
labs(x = NULL, y = "Variable Importance (Mean Decrease in Accuracy)")
ggsave("fig_a13.pdf",
width = 9, height = 7)
# Model with interaction term for taxes and spending
lm_taxesspend_Int_20 <- lm(taxes_spending ~ urban * age_cat +
gender + university_degree + urban * income_harmonised,
weight = weights,
data = filter(dat_reg, year == "2020"))
lm_taxesspend_Int_20
# Model with interaction term for income differences
lm_incomediff__Int_20 <- lm(income_differences ~ urban * age_cat +
gender + university_degree + urban * income_harmonised,
weight = weights,
data = filter(dat_reg, year == "2020"))
lm_incomediff__Int_20
lm_lr_02 <- lm(left_right_self ~
income_harmonised  +
age_cat +
gender + urban +
university_degree,
weight = weights,
data = filter(dat_reg,
year == "2002"))
lm_lr_20 <- update(lm_lr_02,
data = filter(dat_reg,
year == "2020"))
lm_lr_urban_INT <- lm(left_right_self ~
urban * income_harmonised  +
urban * age_cat +
gender + university_degree,
weight = weights,
data = filter(dat_reg, year == "2020"))
lm_lr_urban_INT
anova(lm_lr_20, lm_lr_urban_INT)
anova(lm_taxesspend_20, lm_taxesspend_Int_20)
anova(lm_incomediff_20, lm_incomediff__Int_20)
